Found configuration in /home/dealmaha/textanalytics/rush.json

[1mRush Multi-Project Build Tool 5.63.0[22m - Node.js 18.6.0 (pre-LTS)
> "npm run clean && npm run build:test && npm run unit-test"


> @azure/ai-language-text@1.1.0-beta.1 clean
> rimraf dist dist-* temp types *.tgz *.log


> @azure/ai-language-text@1.1.0-beta.1 build:test
> tsc -p . && dev-tool run bundle

[bundle] Created production CommonJS bundle.
[bundle] Created browser testing bundle.

> @azure/ai-language-text@1.1.0-beta.1 unit-test
> npm run unit-test:node && npm run unit-test:browser


> @azure/ai-language-text@1.1.0-beta.1 unit-test:node
> dev-tool run test:node-ts-input -- --timeout 1200000 "test/**/*.spec.ts"

[test-info] ===TEST_MODE="record"===
[test-proxy] Proxy tool seems to be active at http://localhost:5000

[preparing-proxy-tool] Proxy tool seems to be active, not attempting to start the test proxy at http://localhost:5000 & https://localhost:5001.

[node-tests] 
[node-tests] 
[node-tests]   Models
[node-tests]     âœ“ AnalyzeActionName
[node-tests]     âœ“ AnalyzeBatchActionName
[node-tests] 
[node-tests]   [APIKey] TextAnalysisClient
[node-tests]     analyze
[node-tests]       #SentimentAnalysis
[node-tests]         âœ“ client throws on empty list
[node-tests]         âœ“ client accepts string[] and language (148ms)
[node-tests]         âœ“ client accepts string[] with no language (129ms)
[node-tests]         âœ“ service returns error for invalid language (98ms)
[node-tests]         âœ“ service has a bug when referencing assessments in doc #6 or greater (128ms)
[node-tests]         âœ“ service returns an error for an empty document (123ms)
[node-tests]         âœ“ client accepts TextDocumentInput[] (123ms)
[node-tests]         âœ“ client gets positive mined assessments (111ms)
[node-tests]         âœ“ client gets negative mined assessments (103ms)
[node-tests]         âœ“ client gets no mined assessments (97ms)
[node-tests]       #LanguageDetection
[node-tests]         âœ“ client throws on empty list
[node-tests]         âœ“ client accepts no countryHint (3465ms)
[node-tests]         âœ“ client accepts a countryHint (766ms)
[node-tests]         âœ“ client accepts "none" country hint with string[] input (116ms)
[node-tests]         âœ“ client accepts "none" country hint with DetectLanguageInput[] input (113ms)
[node-tests]         âœ“ service errors on invalid country hint (89ms)
[node-tests]         âœ“ client accepts mixed-country DetectLanguageInput[] (96ms)
[node-tests]       #EntityRecognition
[node-tests]         âœ“ client throws on empty list
[node-tests]         âœ“ client accepts string[] with no language (176ms)
[node-tests]         âœ“ client accepts string[] with a language specified (660ms)
[node-tests]         âœ“ service errors on unsupported language (113ms)
[node-tests]         âœ“ client accepts mixed-language TextDocumentInput[] (157ms)
[node-tests]         âœ“ client throws exception for too many inputs (94ms)
[node-tests]       #KeyPhraseExtraction
[node-tests]         âœ“ client throws on empty list
[node-tests]         âœ“ client accepts string[] with no language (110ms)
[node-tests]         âœ“ client accepts string[] with a language specified (133ms)
[node-tests]         âœ“ service errors on unsupported language (88ms)
[node-tests]         âœ“ client accepts mixed-language TextDocumentInput[] (116ms)
[node-tests]       #PiiEntityRecognition
[node-tests]         âœ“ client throws on empty list
[node-tests]         âœ“ client accepts string[] with no language (128ms)
[node-tests]         âœ“ client accepts string[] with a language specified (118ms)
[node-tests]         âœ“ client correctly reports recognition of PII-like pattern (115ms)
[node-tests]         âœ“ service errors on unsupported language (87ms)
[node-tests]         âœ“ client accepts mixed-language TextDocumentInput[] (118ms)
[node-tests]         âœ“ accepts domain filter (147ms)
[node-tests]         âœ“ accepts pii categories (124ms)
[node-tests]         âœ“ output pii categories are accepted as input (224ms)
[node-tests]       #EntityLinking
[node-tests]         âœ“ client throws on empty list
[node-tests]         âœ“ client accepts string[] with no language (115ms)
[node-tests]         âœ“ client accepts string[] with a language specified (139ms)
[node-tests]         âœ“ service errors on unsupported language (93ms)
[node-tests]         âœ“ client accepts mixed-language TextDocumentInput[] (1435ms)
[node-tests]         âœ“ client throws exception for too many inputs (102ms)
[node-tests]       #Dynamic Classification [single]
[node-tests]         âœ“ client throws on empty list
[node-tests]         âœ“ client accepts string[] and language (886ms)
[node-tests]         âœ“ client accepts string[] with no language (852ms)
[node-tests]         âœ“ service errors on unsupported language (97ms)
[node-tests]         âœ“ service errors on invalid number of categories (96ms)
[node-tests]         âœ“ service errors on invalid classification type (95ms)
[node-tests]       #Dynamic Classification [multi]
[node-tests]         âœ“ client throws on empty list
[node-tests]         âœ“ client accepts string[] and language (784ms)
[node-tests]         âœ“ client accepts string[] with no language (1825ms)
[node-tests]         âœ“ service errors on unsupported language (104ms)
[node-tests]         âœ“ service errors on invalid number of categories (97ms)
[node-tests]         âœ“ service errors on invalid classification type (88ms)
[node-tests]       #String encoding
[node-tests]         #Default encoding (utf16CodeUnit)
[node-tests]           âœ“ emoji (115ms)
[node-tests]           âœ“ emoji with skin tone modifier (115ms)
[node-tests]           âœ“ family emoji (116ms)
[node-tests]           âœ“ family emoji with skin tone modifier (118ms)
[node-tests]           âœ“ diacritics nfc (116ms)
[node-tests]           âœ“ diacritics nfd (117ms)
[node-tests]           âœ“ korean nfc (205ms)
[node-tests]           âœ“ korean nfd (130ms)
[node-tests]           âœ“ zalgo (171ms)
[node-tests]         #UnicodeCodePoint
[node-tests]           âœ“ emoji (125ms)
[node-tests]           âœ“ emoji with skin tone modifier (111ms)
[node-tests]           âœ“ family emoji (114ms)
[node-tests]           âœ“ family emoji with skin tone modifier (108ms)
[node-tests]           âœ“ diacritics nfc (118ms)
[node-tests]           âœ“ diacritics nfd (112ms)
[node-tests]           âœ“ korean nfc (109ms)
[node-tests]           âœ“ korean nfd (117ms)
[node-tests]           âœ“ zalgo (142ms)
[node-tests]         #TextElementsV8
[node-tests]           âœ“ emoji (115ms)
[node-tests]           âœ“ emoji with skin tone modifier (121ms)
[node-tests]           âœ“ family emoji (157ms)
[node-tests]           âœ“ family emoji with skin tone modifier (130ms)
[node-tests]           âœ“ diacritics nfc (120ms)
[node-tests]           âœ“ diacritics nfd (115ms)
[node-tests]           âœ“ korean nfc (116ms)
[node-tests]           âœ“ korean nfd (136ms)
[node-tests]           âœ“ zalgo (152ms)
[node-tests] 
[node-tests]   [AAD] TextAnalysisClient
[node-tests]     analyze
[node-tests]       #SentimentAnalysis
[node-tests]         âœ“ client throws on empty list
[node-tests]         âœ“ client accepts string[] and language (1328ms)
[node-tests]         âœ“ client accepts string[] with no language (618ms)
[node-tests]         âœ“ service returns error for invalid language (616ms)
[node-tests]         âœ“ service has a bug when referencing assessments in doc #6 or greater (613ms)
[node-tests]         âœ“ service returns an error for an empty document (627ms)
[node-tests]         âœ“ client accepts TextDocumentInput[] (642ms)
[node-tests]         âœ“ client gets positive mined assessments (544ms)
[node-tests]         âœ“ client gets negative mined assessments (550ms)
[node-tests]         âœ“ client gets no mined assessments (556ms)
[node-tests]       #LanguageDetection
[node-tests]         âœ“ client throws on empty list
[node-tests]         âœ“ client accepts no countryHint (573ms)
[node-tests]         âœ“ client accepts a countryHint (521ms)
[node-tests]         âœ“ client accepts "none" country hint with string[] input (547ms)
[node-tests]         âœ“ client accepts "none" country hint with DetectLanguageInput[] input (603ms)
[node-tests]         âœ“ service errors on invalid country hint (594ms)
[node-tests]         âœ“ client accepts mixed-country DetectLanguageInput[] (518ms)
[node-tests]       #EntityRecognition
[node-tests]         âœ“ client throws on empty list
[node-tests]         âœ“ client accepts string[] with no language (589ms)
[node-tests]         âœ“ client accepts string[] with a language specified (629ms)
[node-tests]         âœ“ service errors on unsupported language (535ms)
[node-tests]         âœ“ client accepts mixed-language TextDocumentInput[] (591ms)
[node-tests]         âœ“ client throws exception for too many inputs (435ms)
[node-tests]       #KeyPhraseExtraction
[node-tests]         âœ“ client throws on empty list
[node-tests]         âœ“ client accepts string[] with no language (456ms)
[node-tests]         âœ“ client accepts string[] with a language specified (547ms)
[node-tests]         âœ“ service errors on unsupported language (581ms)
[node-tests]         âœ“ client accepts mixed-language TextDocumentInput[] (546ms)
[node-tests]       #PiiEntityRecognition
[node-tests]         âœ“ client throws on empty list
[node-tests]         âœ“ client accepts string[] with no language (531ms)
[node-tests]         âœ“ client accepts string[] with a language specified (592ms)
[node-tests]         âœ“ client correctly reports recognition of PII-like pattern (588ms)
[node-tests]         âœ“ service errors on unsupported language (463ms)
[node-tests]         âœ“ client accepts mixed-language TextDocumentInput[] (589ms)
[node-tests]         âœ“ accepts domain filter (507ms)
[node-tests]         âœ“ accepts pii categories (524ms)
[node-tests]         âœ“ output pii categories are accepted as input (725ms)
[node-tests]       #EntityLinking
[node-tests]         âœ“ client throws on empty list
[node-tests]         âœ“ client accepts string[] with no language (598ms)
[node-tests]         âœ“ client accepts string[] with a language specified (548ms)
[node-tests]         âœ“ service errors on unsupported language (458ms)
[node-tests]         âœ“ client accepts mixed-language TextDocumentInput[] (556ms)
[node-tests]         âœ“ client throws exception for too many inputs (479ms)
[node-tests]       #Dynamic Classification [single]
[node-tests]         âœ“ client throws on empty list
[node-tests]         âœ“ client accepts string[] and language (1210ms)
[node-tests]         âœ“ client accepts string[] with no language (1228ms)
[node-tests]         âœ“ service errors on unsupported language (464ms)
[node-tests]         âœ“ service errors on invalid number of categories (434ms)
[node-tests]         âœ“ service errors on invalid classification type (552ms)
[node-tests]       #Dynamic Classification [multi]
[node-tests]         âœ“ client throws on empty list
[node-tests]         âœ“ client accepts string[] and language (1397ms)
[node-tests]         âœ“ client accepts string[] with no language (1311ms)
[node-tests]         âœ“ service errors on unsupported language (492ms)
[node-tests]         âœ“ service errors on invalid number of categories (458ms)
[node-tests]         âœ“ service errors on invalid classification type (491ms)
[node-tests]       #String encoding
[node-tests]         #Default encoding (utf16CodeUnit)
[node-tests]           âœ“ emoji (498ms)
[node-tests]           âœ“ emoji with skin tone modifier (475ms)
[node-tests]           âœ“ family emoji (494ms)
[node-tests]           âœ“ family emoji with skin tone modifier (615ms)
[node-tests]           âœ“ diacritics nfc (465ms)
[node-tests]           âœ“ diacritics nfd (561ms)
[node-tests]           âœ“ korean nfc (537ms)
[node-tests]           âœ“ korean nfd (517ms)
[node-tests]           âœ“ zalgo (527ms)
[node-tests]         #UnicodeCodePoint
[node-tests]           âœ“ emoji (565ms)
[node-tests]           âœ“ emoji with skin tone modifier (525ms)
[node-tests]           âœ“ family emoji (572ms)
[node-tests]           âœ“ family emoji with skin tone modifier (489ms)
[node-tests]           âœ“ diacritics nfc (573ms)
[node-tests]           âœ“ diacritics nfd (529ms)
[node-tests]           âœ“ korean nfc (516ms)
[node-tests]           âœ“ korean nfd (488ms)
[node-tests]           âœ“ zalgo (626ms)
[node-tests]         #TextElementsV8
[node-tests]           âœ“ emoji (468ms)
[node-tests]           âœ“ emoji with skin tone modifier (629ms)
[node-tests]           âœ“ family emoji (550ms)
[node-tests]           âœ“ family emoji with skin tone modifier (482ms)
[node-tests]           âœ“ diacritics nfc (497ms)
[node-tests]           âœ“ diacritics nfd (528ms)
[node-tests]           âœ“ korean nfc (558ms)
[node-tests]           âœ“ korean nfd (625ms)
[node-tests]           âœ“ zalgo (499ms)
[node-tests] 
[node-tests]   [APIKey] TextAnalysisClient
[node-tests]     analyzeBatch
[node-tests]       actions
[node-tests]         prebuilt
[node-tests]           âœ“ entity recognition (3008ms)
[node-tests]           âœ“ entity recognition with resolution (3325ms)
[node-tests]           âœ“ key phrase extraction (2992ms)
[node-tests]           âœ“ entity linking (3036ms)
[node-tests]           âœ“ pii entity recognition (3689ms)
[node-tests]           âœ“ pii entity recognition with filtered categories (2748ms)
[node-tests]           âœ“ pii entity recognition with phi domain (2939ms)
[node-tests]           âœ“ sentiment analysis with opinion mining (9568ms)
[node-tests]           âœ“ healthcare (3043ms)
[node-tests]           âœ“ healthcare with fhir (7305ms)
[node-tests]           âœ“ healthcare with known documents type (3108ms)
[node-tests]           âœ“ extractive summarization (7069ms)
[node-tests]           âœ“ extractive summarization with maxSentenceCount (6995ms)
[node-tests]           âœ“ extractive summarization with orderBy (7171ms)
[node-tests]           âœ“ abstractive summarization (7021ms)
[node-tests]           âœ“ abstractive summarization with maxSentenceCont (4895ms)
[node-tests]       general behavior
[node-tests]         âœ“ unique multiple actions per type are allowed (2780ms)
[node-tests]         âœ“ some documents with errors and multiple actions (3178ms)
[node-tests]         âœ“ all documents with errors and multiple actions (3140ms)
[node-tests]         âœ“ output order is same as the input's one with multiple actions (5740ms)
[node-tests]         âœ“ out of order input IDs with multiple actions (3451ms)
[node-tests]         âœ“ statistics (3290ms)
[node-tests]         âœ“ whole batch language hint (3179ms)
[node-tests]         âœ“ whole batch with no language hint (3042ms)
[node-tests]         âœ“ whole batch input with a language hint (3146ms)
[node-tests]         âœ“ invalid language hint (9414ms)
[node-tests]         âœ“ paged results with custom page size (18954ms)
[node-tests]         âœ“ operation metadata (2581ms)
[node-tests]         - cancel after progress
[node-tests]         âœ“ rehydrated polling (8484ms)
[node-tests]         errors and warnings
[node-tests]           âœ“ bad request empty string (102ms)
[node-tests]           âœ“ malformed action (95ms)
[node-tests]           âœ“ duplicate actions of the same type are disallowed (86ms)
[node-tests]           âœ“ too many documents (164ms)
[node-tests]           âœ“ payload too large (392ms)
[node-tests]           âœ“ big document causes a warning (6986ms)
[node-tests]         stringIndexType
[node-tests]           âœ“ family emoji wit skin tone modifier (2674ms)
[node-tests]           âœ“ family emoji wit skin tone modifier with Utf16CodeUnit (2709ms)
[node-tests]           âœ“ family emoji wit skin tone modifier with UnicodeCodePoint (2702ms)
[node-tests] 
[node-tests]   [AAD] TextAnalysisClient
[node-tests]     analyzeBatch
[node-tests]       actions
[node-tests]         prebuilt
[node-tests]           âœ“ entity recognition (3454ms)
[node-tests]           âœ“ entity recognition with resolution (3718ms)
[node-tests]           âœ“ key phrase extraction (5565ms)
[node-tests]           âœ“ entity linking (3575ms)
[node-tests]           âœ“ pii entity recognition (3403ms)
[node-tests]           âœ“ pii entity recognition with filtered categories (3282ms)
[node-tests]           âœ“ pii entity recognition with phi domain (3530ms)
[node-tests]           âœ“ sentiment analysis with opinion mining (3628ms)
[node-tests]           âœ“ healthcare (3683ms)
[node-tests]           âœ“ healthcare with fhir (5892ms)
[node-tests]           âœ“ healthcare with known documents type (3631ms)
[node-tests]           âœ“ extractive summarization (7675ms)
[node-tests]           âœ“ extractive summarization with maxSentenceCount (7653ms)
[node-tests]           âœ“ extractive summarization with orderBy (7769ms)
[node-tests]           âœ“ abstractive summarization (5576ms)
[node-tests]           âœ“ abstractive summarization with maxSentenceCont (5763ms)
[node-tests]       general behavior
[node-tests]         âœ“ unique multiple actions per type are allowed (3317ms)
[node-tests]         âœ“ some documents with errors and multiple actions (3593ms)
[node-tests]         âœ“ all documents with errors and multiple actions (6140ms)
[node-tests]         âœ“ output order is same as the input's one with multiple actions (8697ms)
[node-tests]         âœ“ out of order input IDs with multiple actions (6351ms)
[node-tests]         âœ“ statistics (6331ms)
[node-tests]         âœ“ whole batch language hint (3595ms)
[node-tests]         âœ“ whole batch with no language hint (3709ms)
[node-tests]         âœ“ whole batch input with a language hint (3803ms)
[node-tests]         âœ“ invalid language hint (3454ms)
[node-tests]         âœ“ paged results with custom page size (10206ms)
[node-tests]         âœ“ operation metadata (3029ms)
[node-tests]         - cancel after progress
[node-tests]         âœ“ rehydrated polling (11507ms)
[node-tests]         errors and warnings
[node-tests]           âœ“ bad request empty string (213ms)
[node-tests]           âœ“ malformed action (355ms)
[node-tests]           âœ“ duplicate actions of the same type are disallowed (267ms)
[node-tests]           âœ“ too many documents (326ms)
[node-tests]           âœ“ payload too large (524ms)
[node-tests]           âœ“ big document causes a warning (5515ms)
[node-tests]         stringIndexType
[node-tests]           âœ“ family emoji wit skin tone modifier (3328ms)
[node-tests]           âœ“ family emoji wit skin tone modifier with Utf16CodeUnit (3238ms)
[node-tests]           âœ“ family emoji wit skin tone modifier with UnicodeCodePoint (3242ms)
[node-tests] 
[node-tests]   [APIKey] TextAnalysisClient
[node-tests]     analyzeBatch
[node-tests]       actions
[node-tests]         custom
[node-tests]           âœ“ entity recognition (3033ms)
[node-tests]           âœ“ single label classification action (2400ms)
[node-tests]           âœ“ multi label classification action (2568ms)
[node-tests] 
[node-tests]   [AAD] TextAnalysisClient
[node-tests]     analyzeBatch
[node-tests]       actions
[node-tests]         custom
[node-tests]           âœ“ entity recognition (1397ms)
[node-tests]           âœ“ single label classification action (2705ms)
[node-tests]           âœ“ multi label classification action (2773ms)
[node-tests] 
[node-tests]   [API Key] TextAnalysisClient
[node-tests]     Client options
[node-tests]       âœ“ service version (231ms)
[node-tests] 
[node-tests] 
[node-tests]   249 passing (7m)
[node-tests]   2 pending
[node-tests] 
[node-tests] mocha -r esm -r ts-node/register --reporter ../../../common/tools/mocha-multi-reporter.js --full-trace --timeout 1200000 "test/**/*.spec.ts" exited with code 0

> @azure/ai-language-text@1.1.0-beta.1 unit-test:browser
> dev-tool run test:browser

[test-info] ===TEST_MODE="record"===
[test-proxy] Proxy tool seems to be active at http://localhost:5000

[preparing-proxy-tool] Proxy tool seems to be active, not attempting to start the test proxy at http://localhost:5000 & https://localhost:5001.

[browser-tests] [32m01 11 2022 15:58:52.615:INFO [preprocessor.env]: [39mPublishing variables:  [
[browser-tests]   'TEST_MODE',
[browser-tests]   'ENDPOINT',
[browser-tests]   'LANGUAGE_API_KEY',
[browser-tests]   'LANGUAGE_API_KEY_ALT',
[browser-tests]   'AZURE_CLIENT_ID',
[browser-tests]   'AZURE_CLIENT_SECRET',
[browser-tests]   'AZURE_TENANT_ID',
[browser-tests]   'AZURE_LANGUAGE_ENDPOINT',
[browser-tests]   'AZURE_LANGUAGE_KEY',
[browser-tests]   'CUSTOM_ENTITIES_PROJECT_NAME',
[browser-tests]   'CUSTOM_ENTITIES_DEPLOYMENT_NAME',
[browser-tests]   'SINGLE_LABEL_CLASSIFY_PROJECT_NAME',
[browser-tests]   'SINGLE_LABEL_CLASSIFY_DEPLOYMENT_NAME',
[browser-tests]   'MULTI_LABEL_CLASSIFY_PROJECT_NAME',
[browser-tests]   'MULTI_LABEL_CLASSIFY_DEPLOYMENT_NAME',
[browser-tests]   'RECORDINGS_RELATIVE_PATH'
[browser-tests] ]
[browser-tests] 
[browser-tests] START:
[browser-tests] [32m01 11 2022 15:58:52.840:INFO [karma-server]: [39mKarma v6.4.1 server started at http://localhost:9876/
[browser-tests] [32m01 11 2022 15:58:52.841:INFO [launcher]: [39mLaunching browsers ChromeHeadlessNoSandbox with concurrency 1
[browser-tests] [32m01 11 2022 15:58:52.856:INFO [launcher]: [39mStarting browser ChromeHeadless
[browser-tests] [32m01 11 2022 15:58:53.495:INFO [Chrome Headless 103.0.5058.0 (Linux x86_64)]: [39mConnected on socket egsJPgsUe9Jfiwi9AAAB with id 40967061
[browser-tests]   Models
[browser-tests]     âœ” AnalyzeActionName
[browser-tests]     âœ” AnalyzeBatchActionName
[browser-tests]   [APIKey] TextAnalysisClient
[browser-tests]     analyze
[browser-tests]       #SentimentAnalysis
[browser-tests]         âœ” client throws on empty list
[browser-tests]         âœ” client accepts string[] and language
[browser-tests]         âœ” client accepts string[] with no language
[browser-tests]         âœ” service returns error for invalid language
[browser-tests]         âœ” service has a bug when referencing assessments in doc #6 or greater
[browser-tests]         âœ” service returns an error for an empty document
[browser-tests]         âœ” client accepts TextDocumentInput[]
[browser-tests]         âœ” client gets positive mined assessments
[browser-tests]         âœ” client gets negative mined assessments
[browser-tests]         âœ” client gets no mined assessments
[browser-tests]       #LanguageDetection
[browser-tests]         âœ” client throws on empty list
[browser-tests]         âœ” client accepts no countryHint
[browser-tests]         âœ” client accepts a countryHint
[browser-tests]         âœ” client accepts "none" country hint with string[] input
[browser-tests]         âœ” client accepts "none" country hint with DetectLanguageInput[] input
[browser-tests]         âœ” service errors on invalid country hint
[browser-tests]         âœ” client accepts mixed-country DetectLanguageInput[]
[browser-tests]       #EntityRecognition
[browser-tests]         âœ” client throws on empty list
[browser-tests]         âœ” client accepts string[] with no language
[browser-tests]         âœ” client accepts string[] with a language specified
[browser-tests]         âœ” service errors on unsupported language
[browser-tests]         âœ” client accepts mixed-language TextDocumentInput[]
[browser-tests]         âœ” client throws exception for too many inputs
[browser-tests]       #KeyPhraseExtraction
[browser-tests]         âœ” client throws on empty list
[browser-tests]         âœ” client accepts string[] with no language
[browser-tests]         âœ” client accepts string[] with a language specified
[browser-tests]         âœ” service errors on unsupported language
[browser-tests]         âœ” client accepts mixed-language TextDocumentInput[]
[browser-tests]       #PiiEntityRecognition
[browser-tests]         âœ” client throws on empty list
[browser-tests]         âœ” client accepts string[] with no language
[browser-tests]         âœ” client accepts string[] with a language specified
[browser-tests]         âœ” client correctly reports recognition of PII-like pattern
[browser-tests]         âœ” service errors on unsupported language
[browser-tests]         âœ” client accepts mixed-language TextDocumentInput[]
[browser-tests]         âœ” accepts domain filter
[browser-tests]         âœ” accepts pii categories
[browser-tests]         âœ” output pii categories are accepted as input
[browser-tests]       #EntityLinking
[browser-tests]         âœ” client throws on empty list
[browser-tests]         âœ” client accepts string[] with no language
[browser-tests]         âœ” client accepts string[] with a language specified
[browser-tests]         âœ” service errors on unsupported language
[browser-tests]         âœ” client accepts mixed-language TextDocumentInput[]
[browser-tests]         âœ” client throws exception for too many inputs
[browser-tests]       #Dynamic Classification [single]
[browser-tests]         âœ” client throws on empty list
[browser-tests]         âœ” client accepts string[] and language
[browser-tests]         âœ” client accepts string[] with no language
[browser-tests]         âœ” service errors on unsupported language
[browser-tests]         âœ” service errors on invalid number of categories
[browser-tests]         âœ” service errors on invalid classification type
[browser-tests]       #Dynamic Classification [multi]
[browser-tests]         âœ” client throws on empty list
[browser-tests]         âœ” client accepts string[] and language
[browser-tests]         âœ” client accepts string[] with no language
[browser-tests]         âœ” service errors on unsupported language
[browser-tests]         âœ” service errors on invalid number of categories
[browser-tests]         âœ” service errors on invalid classification type
[browser-tests]       #String encoding
[browser-tests]         #Default encoding (utf16CodeUnit)
[browser-tests]           âœ” emoji
[browser-tests]           âœ” emoji with skin tone modifier
[browser-tests]           âœ” family emoji
[browser-tests]           âœ” family emoji with skin tone modifier
[browser-tests]           âœ” diacritics nfc
[browser-tests]           âœ” diacritics nfd
[browser-tests]           âœ” korean nfc
[browser-tests]           âœ” korean nfd
[browser-tests]           âœ” zalgo
[browser-tests]         #UnicodeCodePoint
[browser-tests]           âœ” emoji
[browser-tests]           âœ” emoji with skin tone modifier
[browser-tests]           âœ” family emoji
[browser-tests]           âœ” family emoji with skin tone modifier
[browser-tests]           âœ” diacritics nfc
[browser-tests]           âœ” diacritics nfd
[browser-tests]           âœ” korean nfc
[browser-tests]           âœ” korean nfd
[browser-tests]           âœ” zalgo
[browser-tests]         #TextElementsV8
[browser-tests]           âœ” emoji
[browser-tests]           âœ” emoji with skin tone modifier
[browser-tests]           âœ” family emoji
[browser-tests]           âœ” family emoji with skin tone modifier
[browser-tests]           âœ” diacritics nfc
[browser-tests]           âœ” diacritics nfd
[browser-tests]           âœ” korean nfc
[browser-tests]           âœ” korean nfd
[browser-tests]           âœ” zalgo
[browser-tests]   [AAD] TextAnalysisClient
[browser-tests]     analyze
[browser-tests]       #SentimentAnalysis
[browser-tests]         âœ” client throws on empty list
[browser-tests]         âœ” client accepts string[] and language
[browser-tests]         âœ” client accepts string[] with no language
[browser-tests]         âœ” service returns error for invalid language
[browser-tests]         âœ” service has a bug when referencing assessments in doc #6 or greater
[browser-tests]         âœ” service returns an error for an empty document
[browser-tests]         âœ” client accepts TextDocumentInput[]
[browser-tests]         âœ” client gets positive mined assessments
[browser-tests]         âœ” client gets negative mined assessments
[browser-tests]         âœ” client gets no mined assessments
[browser-tests]       #LanguageDetection
[browser-tests]         âœ” client throws on empty list
[browser-tests]         âœ” client accepts no countryHint
[browser-tests]         âœ” client accepts a countryHint
[browser-tests]         âœ” client accepts "none" country hint with string[] input
[browser-tests]         âœ” client accepts "none" country hint with DetectLanguageInput[] input
[browser-tests]         âœ” service errors on invalid country hint
[browser-tests]         âœ” client accepts mixed-country DetectLanguageInput[]
[browser-tests]       #EntityRecognition
[browser-tests]         âœ” client throws on empty list
[browser-tests]         âœ” client accepts string[] with no language
[browser-tests]         âœ” client accepts string[] with a language specified
[browser-tests]         âœ” service errors on unsupported language
[browser-tests]         âœ” client accepts mixed-language TextDocumentInput[]
[browser-tests]         âœ” client throws exception for too many inputs
[browser-tests]       #KeyPhraseExtraction
[browser-tests]         âœ” client throws on empty list
[browser-tests]         âœ” client accepts string[] with no language
[browser-tests]         âœ” client accepts string[] with a language specified
[browser-tests]         âœ” service errors on unsupported language
[browser-tests]         âœ” client accepts mixed-language TextDocumentInput[]
[browser-tests]       #PiiEntityRecognition
[browser-tests]         âœ” client throws on empty list
[browser-tests]         âœ” client accepts string[] with no language
[browser-tests]         âœ” client accepts string[] with a language specified
[browser-tests]         âœ” client correctly reports recognition of PII-like pattern
[browser-tests]         âœ” service errors on unsupported language
[browser-tests]         âœ” client accepts mixed-language TextDocumentInput[]
[browser-tests]         âœ” accepts domain filter
[browser-tests]         âœ” accepts pii categories
[browser-tests]         âœ” output pii categories are accepted as input
[browser-tests]       #EntityLinking
[browser-tests]         âœ” client throws on empty list
[browser-tests]         âœ” client accepts string[] with no language
[browser-tests]         âœ” client accepts string[] with a language specified
[browser-tests]         âœ” service errors on unsupported language
[browser-tests]         âœ” client accepts mixed-language TextDocumentInput[]
[browser-tests]         âœ” client throws exception for too many inputs
[browser-tests]       #Dynamic Classification [single]
[browser-tests]         âœ” client throws on empty list
[browser-tests]         âœ” client accepts string[] and language
[browser-tests]         âœ” client accepts string[] with no language
[browser-tests]         âœ” service errors on unsupported language
[browser-tests]         âœ” service errors on invalid number of categories
[browser-tests]         âœ” service errors on invalid classification type
[browser-tests]       #Dynamic Classification [multi]
[browser-tests]         âœ” client throws on empty list
[browser-tests]         âœ” client accepts string[] and language
[browser-tests]         âœ” client accepts string[] with no language
[browser-tests]         âœ” service errors on unsupported language
[browser-tests]         âœ” service errors on invalid number of categories
[browser-tests]         âœ” service errors on invalid classification type
[browser-tests]       #String encoding
[browser-tests]         #Default encoding (utf16CodeUnit)
[browser-tests]           âœ” emoji
[browser-tests]           âœ” emoji with skin tone modifier
[browser-tests]           âœ” family emoji
[browser-tests]           âœ” family emoji with skin tone modifier
[browser-tests]           âœ” diacritics nfc
[browser-tests]           âœ” diacritics nfd
[browser-tests]           âœ” korean nfc
[browser-tests]           âœ” korean nfd
[browser-tests]           âœ” zalgo
[browser-tests]         #UnicodeCodePoint
[browser-tests]           âœ” emoji
[browser-tests]           âœ” emoji with skin tone modifier
[browser-tests]           âœ” family emoji
[browser-tests]           âœ” family emoji with skin tone modifier
[browser-tests]           âœ” diacritics nfc
[browser-tests]           âœ” diacritics nfd
[browser-tests]           âœ” korean nfc
[browser-tests]           âœ” korean nfd
[browser-tests]           âœ” zalgo
[browser-tests]         #TextElementsV8
[browser-tests]           âœ” emoji
[browser-tests]           âœ” emoji with skin tone modifier
[browser-tests]           âœ” family emoji
[browser-tests]           âœ” family emoji with skin tone modifier
[browser-tests]           âœ” diacritics nfc
[browser-tests]           âœ” diacritics nfd
[browser-tests]           âœ” korean nfc
[browser-tests]           âœ” korean nfd
[browser-tests]           âœ” zalgo
[browser-tests]     analyzeBatch
[browser-tests]       actions
[browser-tests]         prebuilt
[browser-tests]           âœ” entity recognition
[browser-tests]           âœ” entity recognition with resolution
[browser-tests]           âœ” key phrase extraction
[browser-tests]           âœ” entity linking
[browser-tests]           âœ” pii entity recognition
[browser-tests]           âœ” pii entity recognition with filtered categories
[browser-tests]           âœ” pii entity recognition with phi domain
[browser-tests]           âœ” sentiment analysis with opinion mining
[browser-tests]           âœ” healthcare
[browser-tests]           âœ” healthcare with fhir
[browser-tests]           âœ” healthcare with known documents type
[browser-tests]           âœ” extractive summarization
[browser-tests]           âœ” extractive summarization with maxSentenceCount
[browser-tests]           âœ” extractive summarization with orderBy
[browser-tests]           âœ” abstractive summarization
[browser-tests]           âœ” abstractive summarization with maxSentenceCont
[browser-tests]       general behavior
[browser-tests]         âœ” unique multiple actions per type are allowed
[browser-tests]         âœ” some documents with errors and multiple actions
[browser-tests]         âœ” all documents with errors and multiple actions
[browser-tests]         âœ” output order is same as the input's one with multiple actions
[browser-tests]         âœ” out of order input IDs with multiple actions
[browser-tests]         âœ” statistics
[browser-tests]         âœ” whole batch language hint
[browser-tests]         âœ” whole batch with no language hint
[browser-tests]         âœ” whole batch input with a language hint
[browser-tests]         âœ” invalid language hint
[browser-tests]         âœ” paged results with custom page size
[browser-tests]         âœ” operation metadata
[browser-tests]         âœ– cancel after progress (skipped)
[browser-tests]         âœ” rehydrated polling
[browser-tests]         errors and warnings
[browser-tests]           âœ” bad request empty string
[browser-tests]           âœ” malformed action
[browser-tests]           âœ” duplicate actions of the same type are disallowed
[browser-tests]           âœ” too many documents
[browser-tests]           âœ” payload too large
[browser-tests]           âœ” big document causes a warning
[browser-tests]         stringIndexType
[browser-tests]           âœ” family emoji wit skin tone modifier
[browser-tests]           âœ” family emoji wit skin tone modifier with Utf16CodeUnit
[browser-tests]           âœ” family emoji wit skin tone modifier with UnicodeCodePoint
[browser-tests]     analyzeBatch
[browser-tests]       actions
[browser-tests]         prebuilt
[browser-tests]           âœ” entity recognition
[browser-tests]           âœ” entity recognition with resolution
[browser-tests]           âœ” key phrase extraction
[browser-tests]           âœ” entity linking
[browser-tests]           âœ” pii entity recognition
[browser-tests]           âœ” pii entity recognition with filtered categories
[browser-tests]           âœ” pii entity recognition with phi domain
[browser-tests]           âœ” sentiment analysis with opinion mining
[browser-tests]           âœ” healthcare
[browser-tests]           âœ” healthcare with fhir
[browser-tests]           âœ” healthcare with known documents type
[browser-tests]           âœ” extractive summarization
[browser-tests]           âœ” extractive summarization with maxSentenceCount
[browser-tests]           âœ” extractive summarization with orderBy
[browser-tests]           âœ” abstractive summarization
[browser-tests]           âœ” abstractive summarization with maxSentenceCont
[browser-tests]       general behavior
[browser-tests]         âœ” unique multiple actions per type are allowed
[browser-tests]         âœ” some documents with errors and multiple actions
[browser-tests]         âœ” all documents with errors and multiple actions
[browser-tests]         âœ– output order is same as the input's one with multiple actions
[browser-tests]         âœ” out of order input IDs with multiple actions
[browser-tests]         âœ” statistics
[browser-tests]         âœ” whole batch language hint
[browser-tests]         âœ” whole batch with no language hint
[browser-tests]         âœ” whole batch input with a language hint
[browser-tests]         âœ” invalid language hint
[browser-tests]         âœ” paged results with custom page size
[browser-tests]         âœ” operation metadata
[browser-tests]         âœ– cancel after progress (skipped)
[browser-tests]         âœ” rehydrated polling
[browser-tests]         errors and warnings
[browser-tests]           âœ” bad request empty string
[browser-tests]           âœ” malformed action
[browser-tests]           âœ” duplicate actions of the same type are disallowed
[browser-tests]           âœ” too many documents
[browser-tests]           âœ” payload too large
[browser-tests]           âœ” big document causes a warning
[browser-tests]         stringIndexType
[browser-tests]           âœ” family emoji wit skin tone modifier
[browser-tests]           âœ” family emoji wit skin tone modifier with Utf16CodeUnit
[browser-tests]           âœ” family emoji wit skin tone modifier with UnicodeCodePoint
[browser-tests]         custom
[browser-tests]           âœ” entity recognition
[browser-tests]           âœ” single label classification action
[browser-tests]           âœ” multi label classification action
[browser-tests]         custom
[browser-tests]           âœ” entity recognition
[browser-tests]           âœ” single label classification action
[browser-tests]           âœ” multi label classification action
[browser-tests]   [API Key] TextAnalysisClient
[browser-tests]     Client options
[browser-tests]       âœ” service version
[browser-tests] 
[browser-tests] Finished in 16 mins 50.052 secs / 16 mins 34.333 secs @ 16:15:43 GMT-0700 (Pacific Daylight Time)
[browser-tests] 
[browser-tests] SUMMARY:
[browser-tests] âœ” 248 tests completed
[browser-tests] â„¹ 2 tests skipped
[browser-tests] âœ– 1 test failed
[browser-tests] 
[browser-tests] FAILED TESTS:
[browser-tests]         âœ– output order is same as the input's one with multiple actions
[browser-tests]           Chrome Headless 103.0.5058.0 (Linux x86_64)
[browser-tests]         Error: Timeout of 600000ms exceeded. For async tests and hooks, ensure "done()" is called; if returning a Promise, ensure it resolves.
[browser-tests] 
[browser-tests] karma start --single-run exited with code 1
Trace: [Internal Error] 
    at /home/dealmaha/textanalytics/common/tools/dev-tool/src/index.ts:10:11
    at processTicksAndRejections (node:internal/process/task_queues:95:5)
[31mThe script failed with exit code 1[39m
