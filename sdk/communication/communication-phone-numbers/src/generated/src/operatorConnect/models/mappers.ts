/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import * as coreClient from "@azure/core-client";

export const ListOfOperators: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ListOfOperators",
    modelProperties: {
      value: {
        serializedName: "value",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Operator"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Operator: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Operator",
    modelProperties: {
      operatorId: {
        serializedName: "operatorId",
        type: {
          name: "String"
        }
      },
      friendlyName: {
        serializedName: "friendlyName",
        type: {
          name: "String"
        }
      },
      landingPage: {
        serializedName: "landingPage",
        type: {
          name: "String"
        }
      },
      logoUri: {
        serializedName: "logoUri",
        type: {
          name: "String"
        }
      },
      logoThumbnailUri: {
        serializedName: "logoThumbnailUri",
        type: {
          name: "String"
        }
      },
      acquiredNumbersCount: {
        serializedName: "acquiredNumbersCount",
        type: {
          name: "Number"
        }
      },
      offerings: {
        serializedName: "offerings",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "OperatorOffering"
            }
          }
        }
      }
    }
  }
};

export const OperatorOffering: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "OperatorOffering",
    modelProperties: {
      offerType: {
        serializedName: "offerType",
        type: {
          name: "String"
        }
      },
      availableCountries: {
        serializedName: "availableCountries",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const CommunicationErrorResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "CommunicationErrorResponse",
    modelProperties: {
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className: "CommunicationError"
        }
      }
    }
  }
};

export const CommunicationError: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "CommunicationError",
    modelProperties: {
      code: {
        serializedName: "code",
        required: true,
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String"
        }
      },
      target: {
        serializedName: "target",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      details: {
        serializedName: "details",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "CommunicationError"
            }
          }
        }
      },
      innerError: {
        serializedName: "innererror",
        type: {
          name: "Composite",
          className: "CommunicationError"
        }
      }
    }
  }
};

export const ListOfConsents: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ListOfConsents",
    modelProperties: {
      value: {
        serializedName: "value",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Consent"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Consent: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Consent",
    modelProperties: {
      operatorId: {
        serializedName: "operatorId",
        type: {
          name: "String"
        }
      },
      status: {
        serializedName: "status",
        type: {
          name: "String"
        }
      },
      consentedBy: {
        serializedName: "consentedBy",
        type: {
          name: "Composite",
          className: "Contact"
        }
      },
      consentedOn: {
        serializedName: "consentedOn",
        type: {
          name: "DateTime"
        }
      },
      lastModifiedBy: {
        serializedName: "lastModifiedBy",
        type: {
          name: "Composite",
          className: "Contact"
        }
      },
      lastModifiedOn: {
        serializedName: "lastModifiedOn",
        type: {
          name: "DateTime"
        }
      },
      consentedCountries: {
        serializedName: "consentedCountries",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      contacts: {
        serializedName: "contacts",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Contact"
            }
          }
        }
      },
      companyName: {
        serializedName: "companyName",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Contact: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Contact",
    modelProperties: {
      fullName: {
        serializedName: "fullName",
        type: {
          name: "String"
        }
      },
      email: {
        serializedName: "email",
        type: {
          name: "String"
        }
      },
      phoneNumber: {
        serializedName: "phoneNumber",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const CreateOrUpdateConsentRequest: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "CreateOrUpdateConsentRequest",
    modelProperties: {
      status: {
        serializedName: "status",
        type: {
          name: "String"
        }
      },
      consentedBy: {
        serializedName: "consentedBy",
        type: {
          name: "Composite",
          className: "Contact"
        }
      },
      lastModifiedBy: {
        serializedName: "lastModifiedBy",
        type: {
          name: "Composite",
          className: "Contact"
        }
      },
      consentedCountries: {
        serializedName: "consentedCountries",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      contacts: {
        serializedName: "contacts",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Contact"
            }
          }
        }
      },
      companyName: {
        serializedName: "companyName",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const OperatorConnectClientGetOperatorsHeaders: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "OperatorConnectClientGetOperatorsHeaders",
    modelProperties: {
      xMsRequestId: {
        serializedName: "x-ms-request-id",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const OperatorConnectClientGetOperatorsExceptionHeaders: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "OperatorConnectClientGetOperatorsExceptionHeaders",
    modelProperties: {
      xMsErrorCode: {
        serializedName: "x-ms-error-code",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const OperatorConnectClientGetConsentsHeaders: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "OperatorConnectClientGetConsentsHeaders",
    modelProperties: {
      xMsRequestId: {
        serializedName: "x-ms-request-id",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const OperatorConnectClientGetConsentsExceptionHeaders: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "OperatorConnectClientGetConsentsExceptionHeaders",
    modelProperties: {
      xMsErrorCode: {
        serializedName: "x-ms-error-code",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const OperatorConnectClientGetConsentHeaders: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "OperatorConnectClientGetConsentHeaders",
    modelProperties: {
      xMsRequestId: {
        serializedName: "x-ms-request-id",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const OperatorConnectClientGetConsentExceptionHeaders: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "OperatorConnectClientGetConsentExceptionHeaders",
    modelProperties: {
      xMsErrorCode: {
        serializedName: "x-ms-error-code",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const OperatorConnectClientCreateOrUpdateConsentHeaders: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "OperatorConnectClientCreateOrUpdateConsentHeaders",
    modelProperties: {
      xMsRequestId: {
        serializedName: "x-ms-request-id",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const OperatorConnectClientCreateOrUpdateConsentExceptionHeaders: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "OperatorConnectClientCreateOrUpdateConsentExceptionHeaders",
    modelProperties: {
      xMsErrorCode: {
        serializedName: "x-ms-error-code",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const OperatorConnectClientGetOperatorsNextHeaders: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "OperatorConnectClientGetOperatorsNextHeaders",
    modelProperties: {
      xMsRequestId: {
        serializedName: "x-ms-request-id",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const OperatorConnectClientGetOperatorsNextExceptionHeaders: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "OperatorConnectClientGetOperatorsNextExceptionHeaders",
    modelProperties: {
      xMsErrorCode: {
        serializedName: "x-ms-error-code",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const OperatorConnectClientGetConsentsNextHeaders: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "OperatorConnectClientGetConsentsNextHeaders",
    modelProperties: {
      xMsRequestId: {
        serializedName: "x-ms-request-id",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const OperatorConnectClientGetConsentsNextExceptionHeaders: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "OperatorConnectClientGetConsentsNextExceptionHeaders",
    modelProperties: {
      xMsErrorCode: {
        serializedName: "x-ms-error-code",
        type: {
          name: "String"
        }
      }
    }
  }
};
