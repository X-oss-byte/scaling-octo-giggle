/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import {
  ShortCodeEntity,
  ShortCodesGetShortCodesOptionalParams,
  ProgramBriefEntity,
  ShortCodesGetUSProgramBriefsOptionalParams,
  ShortCodesUpsertUSProgramBriefOptionalParams,
  ShortCodesUpsertUSProgramBriefResponse,
  ShortCodesDeleteUSProgramBriefOptionalParams,
  ShortCodesGetUSProgramBriefOptionalParams,
  ShortCodesGetUSProgramBriefResponse,
  ShortCodesSubmitUSProgramBriefOptionalParams,
  ShortCodesSubmitUSProgramBriefResponse
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a ShortCodes. */
export interface ShortCodes {
  /**
   * Gets the list of short codes for the current resource.
   * @param options The options parameters.
   */
  listShortCodes(
    options?: ShortCodesGetShortCodesOptionalParams
  ): PagedAsyncIterableIterator<ShortCodeEntity>;
  /**
   * Gets the list of US Program Briefs for the current resource.
   * @param options The options parameters.
   */
  listUSProgramBriefs(
    options?: ShortCodesGetUSProgramBriefsOptionalParams
  ): PagedAsyncIterableIterator<ProgramBriefEntity>;
  /**
   * Creates or updates a US Program Brief.
   * @param programBriefId Program Brief Id. Must be a valid GUID
   * @param options The options parameters.
   */
  upsertUSProgramBrief(
    programBriefId: string,
    options?: ShortCodesUpsertUSProgramBriefOptionalParams
  ): Promise<ShortCodesUpsertUSProgramBriefResponse>;
  /**
   * Deletes a US Program Brief.
   * @param programBriefId Program Brief Id. Must be a valid GUID
   * @param options The options parameters.
   */
  deleteUSProgramBrief(
    programBriefId: string,
    options?: ShortCodesDeleteUSProgramBriefOptionalParams
  ): Promise<void>;
  /**
   * @param programBriefId
   * @param options The options parameters.
   */
  getUSProgramBrief(
    programBriefId: string,
    options?: ShortCodesGetUSProgramBriefOptionalParams
  ): Promise<ShortCodesGetUSProgramBriefResponse>;
  /**
   * @param programBriefId
   * @param options The options parameters.
   */
  submitUSProgramBrief(
    programBriefId: string,
    options?: ShortCodesSubmitUSProgramBriefOptionalParams
  ): Promise<ShortCodesSubmitUSProgramBriefResponse>;
}
